// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "fiber@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/customers": {
            "post": {
                "description": "Create a new Customer.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Create a new Customer",
                "parameters": [
                    {
                        "description": "Customer attribute",
                        "name": "Customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CustomerPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.DetailCustomer"
                        }
                    }
                }
            }
        },
        "/customers/{customer_id}/tenors": {
            "get": {
                "description": "Get Customer by NIK.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Get Customer Detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NIK Customer",
                        "name": "customer_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.DetailCustomer"
                            }
                        }
                    }
                }
            }
        },
        "/customers/{customer_id}/transactions": {
            "get": {
                "description": "Get Trasaction by NIK.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trasaction"
                ],
                "summary": "Get Trasaction Detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NIK Customer",
                        "name": "customer_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/entity.TransactionDetail"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customers/{id}": {
            "get": {
                "description": "Get Customer by NIK.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Get Customer Detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NIK Customer",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.DetailCustomer"
                            }
                        }
                    }
                }
            }
        },
        "/tenors": {
            "post": {
                "description": "Create a new Tenor.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tenor"
                ],
                "summary": "Create a new Tenor",
                "parameters": [
                    {
                        "description": "Tenor attribute",
                        "name": "Customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Tenor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Tenor"
                        }
                    }
                }
            }
        },
        "/tenors/{id}/lunas": {
            "patch": {
                "description": "Update Tenor to Lunas.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tenor"
                ],
                "summary": "Update Tenor to Lunas",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NIK Customer",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {}
            }
        },
        "/transactions": {
            "post": {
                "description": "Create a new Tenor.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trasaction"
                ],
                "summary": "Create a new Tenor",
                "parameters": [
                    {
                        "description": "Tenor attribute",
                        "name": "Customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.TransactionDetail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.TransactionDetail"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.CustomerPayload": {
            "type": "object",
            "properties": {
                "foto_ktp": {
                    "type": "string"
                },
                "foto_selfie": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "gaji": {
                    "type": "number"
                },
                "legal_name": {
                    "type": "string"
                },
                "nik": {
                    "type": "string"
                },
                "tanggal_lahir": {
                    "description": "Date as string from JSON",
                    "type": "string"
                },
                "tempat_lahir": {
                    "type": "string"
                }
            }
        },
        "entity.DetailCustomer": {
            "type": "object",
            "properties": {
                "foto_ktp": {
                    "type": "string"
                },
                "foto_selfie": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "gaji": {
                    "type": "number"
                },
                "legal_name": {
                    "type": "string"
                },
                "nik": {
                    "type": "string"
                },
                "tanggal_lahir": {
                    "type": "string"
                },
                "tempat_lahir": {
                    "type": "string"
                }
            }
        },
        "entity.Tenor": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "is_lunas": {
                    "type": "boolean"
                },
                "limit": {
                    "type": "number"
                },
                "month_number": {
                    "type": "integer"
                },
                "tenor_id": {
                    "type": "integer"
                }
            }
        },
        "entity.TransactionDetail": {
            "type": "object",
            "properties": {
                "admin_fee": {
                    "type": "number"
                },
                "asset_name": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "installment_amount": {
                    "type": "number"
                },
                "interest_amount": {
                    "type": "number"
                },
                "otr_price": {
                    "type": "number"
                },
                "transaction_id": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Fintech API",
	Description:      "This is a swagger for Fintech API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
